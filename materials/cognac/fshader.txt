#version 330
#define MAX_LIGHT_COUNT 3
out vec4 pixelColor;
in vec4 iV;
in vec4 iN;
in vec2 iTexCoords0;
in vec4 iL[MAX_LIGHT_COUNT];
in float lightsIntensity[MAX_LIGHT_COUNT];
in float distRatio[MAX_LIGHT_COUNT];
in float lightsCount;
uniform sampler2D textureMap0;
uniform sampler2D textureMap1;
float shininess=30;
void main(void) 
{
	//kolor materialu dla swiatla rozpraszanego
	vec4 Md=texture(textureMap0,iTexCoords0);
	//kolor materialu dla swiatla odbitego
	vec4 Ms=texture(textureMap1,iTexCoords0);
	if (Ms.r<0.5)
		Md = vec4(0.545, 0.1255, 0.149, 1);
	vec4 resultColor = vec4(0,0,0,1);
	for (int i=0; i<MAX_LIGHT_COUNT; i++)
	{
		if(i<lightsCount)
		{
			vec4 eyeR=reflect(-(iL[i]),iN);
			float nl=max(0,dot(iL[i],iN));
			float rv=pow(max(0,dot(eyeR,iV)),shininess);
			resultColor += distRatio[i] * lightsIntensity[i] * vec4(1,1,1,0) * (Md * nl + rv);
		}
	}
	if (Ms.r<0.5)
		resultColor.w = 0.6;
	pixelColor = resultColor;
}